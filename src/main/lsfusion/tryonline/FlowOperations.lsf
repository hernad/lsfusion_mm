// # header
MODULE FlowOperations;

REQUIRE Shipment, StockItem;
// # header end
run () {
    LOCAL shippedTo = BOOLEAN (Item, LegalEntity); // mark selected products / buyers
    FOR currentBalance (Item i, Stock s)> 10 ORDER DESC name (i) DO {// for goods / warehouses with a balance> 10 in the order of goods names
        FOR stock (shipment (ShipmentDetail sd)) = s AND item (sd) = i DO // for all invoice lines with this product in the warehouse
            shippedTo (i, LegalEntity l) <- TRUE WHERE l = customer (shipment (sd)); // compile to shippedTo (i, LegalEntity l) <- (GROUP MAX TRUE IF stock (shipment (ShipmentDetail sd)) = s AND item (sd) = i AND l = customer (shipment (sd)));
            
        IF salePrice (i)> 6 THEN
            BREAK;
    }
    
    IF (GROUP SUM 1 IF shippedTo (Item i, LegalEntity l))> = 2 THEN // number of positions> = 2
        exportString () <- GROUP CONCAT name (Item i) + '->' + name (LegalEntity l) IF shippedTo (i, l), ', \ n'; // return product / customer names separated by commas with newlines
ELSE
    exportString () <- 'Too few positions';
}
